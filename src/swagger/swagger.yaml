openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
  description: My API Documentation
servers:
  - url: http://localhost:3000
tags:
  - name: User
    description: Operations related to users
  - name: Blog
    description: Operations related to blog posts
  - name: Auth
    description: Operations related to authentication

paths:
  /user/all:
    get:
      tags:
        - User
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /user/{id}:
    get:
      tags:
        - User
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /auth/login:
    post:
      tags:
        - Auth
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    /blog/create:
    post:
      tags:
        - Blog
      summary: Create a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: ['text', 'image', 'shell', 'subheading']
                      value:
                        type: string
                author:
                  type: string
      responses:
        '201':
          description: Blog created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  blog:
                    $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /blog/create:
    post:
      tags:
        - Blog
      summary: Create a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: ['text', 'image', 'shell', 'subheading']
                      value:
                        type: string
                author:
                  type: string
      responses:
        '201':
          description: Blog created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  blog:
                    $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /blog/update/{id}:
    put:
      tags:
        - Blog
      summary: Update a blog post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: ['text', 'image', 'shell', 'subheading']
                      value:
                        type: string
      responses:
        '200':
          description: Blog updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  blog:
                    $ref: '#/components/schemas/Blog'
        '404':
          description: Blog not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /blog/delete/{id}:
    delete:
      tags:
        - Blog
      summary: Delete a blog post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Blog deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '404':
          description: Blog not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /blog/author/{authorId}:
    get:
      tags:
        - Blog
      summary: Get all blogs by author
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of blogs by the author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
        '404':
          description: No blogs found for the author
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Blog:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: ['text', 'image', 'shell', 'subheading']
              value:
                type: string
        author:
          type: string
        createdAt:
          type: string
          format: date-time